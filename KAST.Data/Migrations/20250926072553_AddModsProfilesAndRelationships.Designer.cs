// <auto-generated />
using System;
using KAST.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KAST.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250926072553_AddModsProfilesAndRelationships")]
    partial class AddModsProfilesAndRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("KAST.Data.Models.KastSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModFolderPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerDefaultPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThemeAccent")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("KAST.Data.Models.Mod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SizeBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SteamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SteamId")
                        .IsUnique();

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("KAST.Data.Models.ModProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ModId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ModId", "ProfileId")
                        .IsUnique();

                    b.ToTable("ModProfiles");
                });

            modelBuilder.Entity("KAST.Data.Models.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommandLineArgs")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformanceConfig")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerConfig")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ServerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerProfile")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("KAST.Data.Models.ProfileHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangeDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommandLineArgsSnapshot")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModsSnapshot")
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformanceConfigSnapshot")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerConfigSnapshot")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerProfileSnapshot")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId", "Version")
                        .IsUnique();

                    b.ToTable("ProfileHistories");
                });

            modelBuilder.Entity("KAST.Data.Models.Server", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("KAST.Data.Models.ModProfile", b =>
                {
                    b.HasOne("KAST.Data.Models.Mod", "Mod")
                        .WithMany("ModProfiles")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KAST.Data.Models.Profile", "Profile")
                        .WithMany("ModProfiles")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("KAST.Data.Models.Profile", b =>
                {
                    b.HasOne("KAST.Data.Models.Server", "Server")
                        .WithMany("Profiles")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Server");
                });

            modelBuilder.Entity("KAST.Data.Models.ProfileHistory", b =>
                {
                    b.HasOne("KAST.Data.Models.Profile", "Profile")
                        .WithMany("ProfileHistories")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("KAST.Data.Models.Mod", b =>
                {
                    b.Navigation("ModProfiles");
                });

            modelBuilder.Entity("KAST.Data.Models.Profile", b =>
                {
                    b.Navigation("ModProfiles");

                    b.Navigation("ProfileHistories");
                });

            modelBuilder.Entity("KAST.Data.Models.Server", b =>
                {
                    b.Navigation("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
