// <auto-generated />
using System;
using KAST.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KAST.Data.Migrations
{
    [DbContext(typeof(KastDbContext))]
    [Migration("20221119152138_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KAST.Core.Models.Author", b =>
                {
                    b.Property<decimal>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("AuthorID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("KAST.Core.Models.Mod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ActualSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("AuthorID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorID");

                    b.ToTable("Mods");

                    b.HasDiscriminator<bool>("IsLocal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("KAST.Core.Models.LocalMod", b =>
                {
                    b.HasBaseType("KAST.Core.Models.Mod");

                    b.HasDiscriminator().HasValue(true);
                });

            modelBuilder.Entity("KAST.Core.Models.SteamMod", b =>
                {
                    b.HasBaseType("KAST.Core.Models.Mod");

                    b.Property<decimal?>("ExpectedSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("LocalLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SteamID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("SteamLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(false);
                });

            modelBuilder.Entity("KAST.Core.Models.Mod", b =>
                {
                    b.HasOne("KAST.Core.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID");

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
