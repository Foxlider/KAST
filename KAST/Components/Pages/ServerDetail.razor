@page "/server/{serverGuid:guid}"
@inject InstanceManagerService InstanceService
<PageTitle>Server @server.Server.Name</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">@server.Server.Name</MudText>

<MudText Class="mb-4">@server.Server.Id</MudText>

<MudPaper Class="pa-4 ma-4" Elevation="4">
    <MudText Typo="Typo.h5">@server.Server.Name</MudText>

    <MudGrid>
        <MudItem xs="6">
            <MudTextField T="int" Label="MinBandwidth"
                          @bind-Value="server.BasicCfg.MinBandwidth"
                          Immediate="true"
                          OnBlur="() => Save(server)" />
        </MudItem>
        <MudItem xs="6">
            <MudTextField T="long" Label="MaxBandwidth"
                          @bind-Value="server.BasicCfg.MaxBandwidth"
                          Immediate="true"
                          OnBlur="() => Save(server)" />
        </MudItem>
        <!-- Add more fields here -->
    </MudGrid>

    <MudDivider Class="my-4" />

    <MudTextField T="string"
                  Label="Raw Config (basic.cfg)"
                  Lines="20"
                  FullWidth="true"
                  @bind-Value="server.BasicCfgService.RawFileContent"
                  Immediate="true"
                  OnBlur="() => Save(server)" />
</MudPaper>


@code {
    [Parameter]
    public Guid? ServerGuid { get; set; }

    ServerInstance server;

    protected override async Task OnParametersSetAsync()
    {
        server = InstanceService.Servers.FirstOrDefault(s => s.Server.Id == ServerGuid);
        server.BasicCfgService.OnUpdated += () =>
        {
            InvokeAsync(StateHasChanged);
        };
    }

    private void Save(ServerInstance server)
    {
        server.BasicCfgService.UpdateFileFromSettings();
    }
}
