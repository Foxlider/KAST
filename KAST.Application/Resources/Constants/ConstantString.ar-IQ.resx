<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>الاجراءات</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>جمع</value>
  </data>
  <data name="Advanced Search" xml:space="preserve">
    <value>البحث المتقدم</value>
  </data>
  <data name="Are you sure you want to delete the selected items: {0}?" xml:space="preserve">
    <value>هل أنت متأكد من أنك تريد حذف العناصر المحددة: {0}؟</value>
  </data>
  <data name="Are you sure you want to delete this item with Id: {0}?" xml:space="preserve">
    <value>هل أنت متأكد من أنك تريد حذف هذا العنصر باستخدام Id: {0}؟</value>
  </data>
  <data name="Are you sure you want to delete this item: {0}?" xml:space="preserve">
    <value>هل أنت متأكد من أنك تريد حذف هذا العنصر: {0}؟</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>إلغاء الأمر</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>واضح</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>غلق</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>أكد</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>خلق</value>
  </data>
  <data name="Create a new {0}" xml:space="preserve">
    <value>إنشاء {0} جديد</value>
  </data>
  <data name="Create successfully" xml:space="preserve">
    <value>إنشاء بنجاح</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>حذف</value>
  </data>
  <data name="Delete Confirmation" xml:space="preserve">
    <value>حذف التأكيد</value>
  </data>
  <data name="Delete selected items: {0}" xml:space="preserve">
    <value>حذف العناصر المحددة: {0}</value>
  </data>
  <data name="Delete successfully" xml:space="preserve">
    <value>حذف بنجاح</value>
  </data>
  <data name="Delete the {0}" xml:space="preserve">
    <value>حذف {0}</value>
  </data>
  <data name="Downloading..." xml:space="preserve">
    <value>تحميل...</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>حرر</value>
  </data>
  <data name="Edit the {0}" xml:space="preserve">
    <value>تحرير {0}</value>
  </data>
  <data name="Export fail" xml:space="preserve">
    <value>فشل التصدير</value>
  </data>
  <data name="Export successfully" xml:space="preserve">
    <value>تصدير بنجاح</value>
  </data>
  <data name="Export to Excel" xml:space="preserve">
    <value>تصدير إلى Excel</value>
  </data>
  <data name="Import fail" xml:space="preserve">
    <value>فشل الاستيراد</value>
  </data>
  <data name="Import from Excel" xml:space="preserve">
    <value>الاستيراد من Excel</value>
  </data>
  <data name="Import successfully" xml:space="preserve">
    <value>الاستيراد بنجاح</value>
  </data>
  <data name="Loading..." xml:space="preserve">
    <value>تحميل...</value>
  </data>
  <data name="Login fail" xml:space="preserve">
    <value>فشل تسجيل الدخول</value>
  </data>
  <data name="Login successfully" xml:space="preserve">
    <value>تسجيل الدخول بنجاح</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>الخروج</value>
  </data>
  <data name="Logout Confirmation" xml:space="preserve">
    <value>تأكيد تسجيل الخروج</value>
  </data>
  <data name="Logout fail" xml:space="preserve">
    <value>فشل تسجيل الخروج</value>
  </data>
  <data name="Logout successfully" xml:space="preserve">
    <value>تسجيل الخروج بنجاح</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>مقبل</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>لا</value>
  </data>
  <data name="No Allowed" xml:space="preserve">
    <value>غير مسموح به</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>موافق</value>
  </data>
  <data name="Order By" xml:space="preserve">
    <value>اطلب حسب</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>سابق</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>تحديث</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>اعاده تعيين</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>أنقذ</value>
  </data>
  <data name="Save Changes" xml:space="preserve">
    <value>حفظ التغييرات</value>
  </data>
  <data name="Save successfully" xml:space="preserve">
    <value>حفظ بنجاح</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>بحث</value>
  </data>
  <data name="Sign in with {0}" xml:space="preserve">
    <value>تسجيل الدخول باستخدام {0}</value>
  </data>
  <data name="Update successfully" xml:space="preserve">
    <value>التحديث بنجاح</value>
  </data>
  <data name="Uploading..." xml:space="preserve">
    <value>تحميل...</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>نعم</value>
  </data>
  <data name="You are attempting to log out of application. Do you really want to log out?" xml:space="preserve">
    <value>تحاول تسجيل الخروج من التطبيق. هل تريد حقا تسجيل الخروج؟</value>
  </data>
</root>