// <auto-generated />
using System;
using KAST.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KAST.Core.Migrations
{
    [DbContext(typeof(KastContext))]
    partial class KastContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("KAST.Core.Models.Author", b =>
                {
                    b.Property<ulong>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("KAST.Core.Models.Mod", b =>
                {
                    b.Property<ulong>("ModID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ActualSize")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("AuthorID")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ExpectedSize")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsLocal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LocalLastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SteamLastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("ModID");

                    b.HasIndex("AuthorID");

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("KAST.Core.Models.Settings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmaPath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CliWorkers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModStagingDir")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseWsDlc")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UsingClsaDlc")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UsingContactDlc")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UsingGmDlc")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UsingPfDlc")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("KAST.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KAST.Core.Models.Mod", b =>
                {
                    b.HasOne("KAST.Core.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID");

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
