@using KAST.Application.Features.Tenants.Commands.AddEdit
@using SixLabors.ImageSharp
@using SixLabors.ImageSharp.Formats
@using SixLabors.ImageSharp.Processing
@inherits MudComponentBase
@inject IStringLocalizer<Tenants> L
<MudDialog>
    <DialogContent>
        <MudForm Model="model" @ref="_form" Validation="@(modelValidator.ValidateValue)">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField Label="@L["Tenant Id"]" @bind-Value="model.Id"
                                  For="@(() => model.Id)"
                                  ReadOnly="true"
                                  Required="true"
                                  RequiredError="@L["Tenant id is required!"]"
                                  >
                    </MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="@L["Tenant Name"]" @bind-Value="model.Name"
                                  For="@(() => model.Name)"
                                  Required="true"
                                  RequiredError="@L["Tenant name is required!"]"
                                  >
                    </MudTextField>
                </MudItem>
                <MudItem xs="12">
                   <MudTextField Label="@L["Description"]" @bind-Value="model.Description"
                                  For="@(() => model.Description)"
                                  >
                    </MudTextField>
                </MudItem>
                
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@ButtonText.CANCEL</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="Submit">@ButtonText.OK</MudButton>
    </DialogActions>
</MudDialog>

@code {
    MudForm? _form = default!;
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;
    AddEditTenantCommandValidator modelValidator = new AddEditTenantCommandValidator();
    [EditorRequired] [Parameter] public AddEditTenantCommand model { get; set; } = default!;

    async Task Submit()
    {
        if (_form is not null)
        {
            await _form.Validate();
            if (_form.IsValid)
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
        }
    }
    void Cancel() => MudDialog.Cancel();
}
