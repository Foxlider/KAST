<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Enter the email address linked to your account and you will recieve an email containing a link to reset your password." xml:space="preserve">
    <value>계정에 연결된 이메일 주소를 입력하면 비밀번호 재설정 링크가 포함된 이메일을 받게 됩니다.</value>
  </data>
  <data name="Forgot Password?" xml:space="preserve">
    <value>비밀번호를 잊으 셨나요?</value>
  </data>
  <data name="Reset Password" xml:space="preserve">
    <value>암호를 재설정</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>이메일</value>
  </data>
  <data name="Enter the email address linked to your account and you will recieve an email containing a token string to reset your password." xml:space="preserve">
    <value>បញ្ចូល អាសយដ្ឋាន អ៊ីមែល ដែល ភ្ជាប់ ទៅ គណនី របស់ អ្នក ហើយ អ្នក នឹង ទទួល អ៊ីមែល ដែល មាន ខ្សែ អក្សរ ថូខេន ដើម្បី កំណត់ ពាក្យ សម្ងាត់ របស់ អ្នក ឡើង វិញ &amp; # 160; ។</value>
  </data>
  <data name="Enter the token string from the recovery email to set your new password." xml:space="preserve">
    <value>បញ្ចូល ខ្សែអក្សរ token ពី អ៊ីមែល recovery ដើម្បី កំណត់ ពាក្យ សម្ងាត់ ថ្មី របស់ អ្នក ។</value>
  </data>
  <data name="No user found by email, please contact the administrator" xml:space="preserve">
    <value>គ្មាន អ្នក ប្រើ រក ឃើញ តាម អ៊ីមែល ទេ សូម ទាក់ទង ទៅ អ្នក គ្រប់គ្រង</value>
  </data>
  <data name="Set a new password" xml:space="preserve">
    <value>កំណត់ពាក្យសម្ងាត់ថ្មី</value>
  </data>
  <data name="Set New Password" xml:space="preserve">
    <value>កំណត់ពាក្យសម្ងាត់ថ្មី</value>
  </data>
  <data name="The input token string must be equal to the token string in the recovery email" xml:space="preserve">
    <value>ខ្សែអក្សរ token input ត្រូវតែស្មើទៅនឹង string token នៅក្នុង អ៊ីមែល recovery</value>
  </data>
  <data name="The new password has been set successfully, please login again" xml:space="preserve">
    <value>ពាក្យ សម្ងាត់ ថ្មី ត្រូវ បាន កំណត់ ដោយ ជោគជ័យ សូម ចូល ម្តង ទៀត</value>
  </data>
  <data name="Token String" xml:space="preserve">
    <value>ខ្សែអក្សរ Token</value>
  </data>
  <data name="Verify your recovery email" xml:space="preserve">
    <value>ផ្ទៀងផ្ទាត់អ៊ីមែល recovery របស់អ្នក</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>រង់ចាំ</value>
  </data>
  <data name="You are already logged in." xml:space="preserve">
    <value>អ្នក បាន ចូល រួច ហើយ ។</value>
  </data>
  <data name="{0} received a request to use email as a recovery email for the account {1}. Use this token:[ {2} ] to finish resting password." xml:space="preserve">
    <value>{0} បាន ទទួល សំណើ មួយ ដើម្បី ប្រើ អ៊ីមែល ជា អ៊ីមែល ស្តារ ឡើង វិញ សម្រាប់ គណនី {1} ។ ប្រើ token នេះ:[ {2} ] ដើម្បី បញ្ចប់ ការ សម្រាក ពាក្យ សម្ងាត់ ។</value>
  </data>
  <data name="{0}, please contact the administrator" xml:space="preserve">
    <value>{0} សូមទាក់ទងទៅអ្នកគ្រប់គ្រង</value>
  </data>
</root>